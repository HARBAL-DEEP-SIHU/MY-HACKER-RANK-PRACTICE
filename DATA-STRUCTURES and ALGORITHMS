**Arrays - DS

import math
import os
import random
import re
import sys


def reverseArray(a):
    l = a[::-1]
    return l

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    arr_count = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    res = reverseArray(arr)

    fptr.write(' '.join(map(str, res)))
    fptr.write('\n')

    fptr.close()
    
     
 **Solve Me First
 
 def solveMeFirst(a,b):
  return a+b
	
 

num1 = int(input())
num2 = int(input())
res = solveMeFirst(num1,num2)
print(res)



**Simple Array Sum
import math
import os
import random
import re
import sys


def simpleArraySum(ar):
  s = 0
      
  for i in ar:   
    s= i+s
  return s
      

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ar_count = int(input().strip())

    ar = list(map(int, input().rstrip().split()))

    result = simpleArraySum(ar)

    fptr.write(str(result) + '\n')

    fptr.close()

**Compare the Triplets

import math
import os
import random
import re
import sys


def compareTriplets(a, b):
  
  alice = 0
  bob=0
  for i in range(0,3):
    if a[i]>b[i]:
      alice+=1
    if a[i]<b[i]:
      bob+=1
    
  return  [alice,bob]    
      

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    a = list(map(int, input().rstrip().split()))

    b = list(map(int, input().rstrip().split()))

    result = compareTriplets(a, b)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
    
**A Very Big Sum

import math
import os
import random
import re
import sys



def aVeryBigSum(ar):
  s=0
  for i in ar:
    s+=i
  return s  
    
    

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ar_count = int(input().strip())

    ar = list(map(int, input().rstrip().split()))

    result = aVeryBigSum(ar)

    fptr.write(str(result) + '\n')

    fptr.close()
    
    
**Diagonal Difference

import math
import os
import random
import re
import sys


def diagonalDifference(arr):
  s1=sum([arr[x][x] for x in range(len(arr))])
  s2= sum([arr[x][n-1-x] for x in range(len(arr))])
  return abs(s1-s2)

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = []

    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))

    result = diagonalDifference(arr)

    fptr.write(str(result) + '\n')

    fptr.close()
    
    
**Plus Minus

import math
import os
import random
import re
import sys


def plusMinus(arr):
  c = (len(arr))
  p = 0
  n =0
  z=0
  for i in range(len(arr)):
    if arr[i] < 0:
      n+=1
    elif arr[i]>0:
      p+=1
    else:
      z+=1
  print('%f'%(p/c))
  print('%f'%(n/c))
  print('%f'%(z/c))  
  
  
if __name__ == '__main__':
    n = int(input().strip())

    arr = list(map(int, input().rstrip().split()))

    plusMinus(arr)
    
** Staircase

import math
import os
import random
import re
import sys

def staircase(n):
  for i in range(1,n+1):
    print(f'{"#"*i:>{n}}')

if __name__ == '__main__':
    n = int(input().strip())

    staircase(n)







